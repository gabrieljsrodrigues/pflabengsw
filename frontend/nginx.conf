server {
    listen 80; # Nginx escuta na porta 80
    listen [::]:80;

    root /usr/share/nginx/html; # Onde os arquivos do React foram copiados
    index index.html index.htm; # Arquivo padrão para servir

    location / {
        try_files $uri $uri/ /index.html; # ESSA É A REGRA CHAVE PARA SPAs
        # Tenta encontrar o arquivo ($uri), se não encontrar, tenta como diretório ($uri/),
        # se ainda não encontrar, serve o /index.html
    }

    # SEÇÃO PARA PROXY REVERSO AO BACKEND
    location /api/ { # <--- ADICIONE ESTA SEÇÃO
        proxy_pass http://backend:8000; # Redireciona para o serviço backend no Docker
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        # Adicional para garantir que o backend veja o protocolo original
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    # FIM DA SEÇÃO PARA PROXY REVERSO


    # Opcional: Configuração para tratamento de erros
    error_page 404 /index.html;

    # Opcional: Configurações de cache e compressão (para performance)
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied any;
    gzip_comp_level 5;
    gzip_buffers 16 8k;
    gzip_min_length 256;
    gzip_vary on;

    # Opcional: Se tiver API no mesmo domínio (não é o seu caso, mas é um padrão)
    # location /api/ {
    #    proxy_pass http://backend:8000/;
    #    proxy_http_version 1.1;
    #    proxy_set_header Upgrade $http_upgrade;
    #    proxy_set_header Connection 'upgrade';
    #    proxy_set_header Host $host;
    #    proxy_cache_bypass $http_upgrade;
    # }
}